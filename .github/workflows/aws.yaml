name: Deploy to AWS ECS

on:
  push:
    branches:
      - dev
      - main

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate .env
        if: github.ref_name == 'dev'
        run: |
          echo "NEXT_PUBLIC_BACKEND_API='https://amus-devapi.musetax.com'" > .env
          echo "NEXT_PUBLIC_FINANCIAL_API='https://staging.musetax.com/FinancialSuite/main/financial-life.html'" >> .env

          cat .env

      - name: Generate .env
        if: github.ref_name == 'main'
        run: |
          echo "NEXT_PUBLIC_BACKEND_API='https://amus-api.musetax.com'" > .env
          echo "NEXT_PUBLIC_FINANCIAL_API='https://staging.musetax.com/FinancialSuite/main/financial-life.html'" >> .env

          cat .env
          
      # Configure AWS credentials before logging into ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build, Tag, and Push Docker image to ECR
      - name: Build, Tag, and Push Docker image to ECR
        if: github.ref_name == 'dev'
        id: build-push
        run: |
          # Build Docker image
          docker build -t ${{ vars.ECR_REPOSITORY_URI }}:dev_latest .
 
          # Push Docker image to ECR
          docker push ${{ vars.ECR_REPOSITORY_URI }}:dev_latest

        env:
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Build, Tag, and Push Docker image to ECR
        if: github.ref_name == 'main'
        id: build-push-prod
        run: |
          # Build Docker image
          docker build -t ${{ vars.ECR_REPOSITORY_URI }}:latest .
 
          # Push Docker image to ECR
          docker push ${{ vars.ECR_REPOSITORY_URI }}:latest

        env:
          AWS_REGION: ${{ vars.AWS_REGION }}

      # Conditionally update ECS service based on the branch
      - name: Update DEV ECS Service
        if: github.ref_name == 'dev'
        run: |
          aws ecs update-service --cluster ${{ vars.DEV_ECS_CLUSTER_NAME }} \
            --service ${{ vars.DEV_ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ vars.AWS_REGION }}

      - name: Update PROD ECS Service
        if: github.ref_name == 'main'
        run: |
          aws ecs update-service --cluster ${{ vars.PROD_ECS_CLUSTER_NAME }} \
            --service ${{ vars.PROD_ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ vars.AWS_REGION }}
